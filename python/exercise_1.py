'''
1)find и count: 
Напишите функцию find_and_count,
которая принимает два аргумента:
строку и символ. Функция должна возвращать количество вхождений символа в строку и его первое вхождение.
Если символ не найден, функция должна возвращать -1.

2)index и replace:
Напишите функцию index_and_replace, которая принимает три аргумента:
строку, символ для поиска и символ для замены.
Функция должна заменить первое вхождение символа для поиска на символ для замены.

3)split и join: 
Напишите функцию split_and_join, которая принимает два аргумента: строку и символ.
Функция должна разбивать строку по пробелам, а затем объединять получившиеся фрагменты, используя в качестве разделителя символ.

4)isdigit, isalpha, isalnum:
Напишите функцию check_string,
которая принимает одну строку в качестве аргумента и возвращает словарь, показывающий,
состоит ли строка только из цифр (isdigit), только из букв (isalpha), или из букв и цифр (isalnum).

5)islower, isupper, isspace, istitle:
Напишите функцию analyze_string,
которая принимает строку и возвращает словарь с информацией о том,
все ли символы строки в нижнем регистре, в верхнем регистре, являются ли все символы пробелами, и является ли строка заголовком.

6)upper, lower:
Напишите функцию convert_case, которая принимает строку и возвращает две строки:
одну с символами в верхнем регистре, а другую - в нижнем.

7)expandtabs:
Напишите функцию expand_my_tabs, которая принимает строку и заменяет все табуляции на четыре пробела.

8)strip, lstrip, rstrip:
Напишите функцию strip_spaces, которая принимает строку и возвращает три строки:
одну с удаленными пробелами с обоих концов, вторую - с удаленными пробелами слева, и третью - с удаленными пробелами справа.

9)title:
Напишите функцию make_title,
которая принимает строку и возвращает эту строку, преобразованную в заголовок (каждое слово начинается с большой буквы).

10)format:
Напишите функцию format_greeting, 
которая принимает имя и возраст и возвращает приветствие в формате: "Привет, {name}. Тебе уже {age} лет!".
'''

def exercise_1(char,s):
    # Используем метод find для поиска первого вхождения символа
    position = s.find(char)

    # Используем метод count для подсчета количества вхождений символа
    count = s.count(char)

    # Если символ не найден, position будет -1
    if position == -1:
        return -1
    else:
        return position, count

def exercise_2(s, old_char, new_char):
   # Используем метод index для поиска первого вхождения символа
   s.index(old_char)

   # Используем метод replace для замены первого вхождения символа
   return s.replace(old_char, new_char, 1)

def exercise_3(char,s):
    # Используем метод split для разбиения строки по пробелам
    split_s = s.split()

    # Используем метод join для объединения получившихся фрагментов с символом в качестве разделителя
    joined_s = char.join(split_s)

    return joined_s

def exercise_4(s):
    result = {} 
    if s.isdigit(): # проверяет, состоит ли строка только из цифр
        result["result"] = "Цифры"
    elif s.isalpha(): #проверяет, состоит ли строка только из букв
        result["result"] = "Буквы"
    elif s.isalnum(): #проверяет, состоит ли строка только из комбинации букв и цифр
        result["result"] = "Буквоцифры" 
    else: 
        result["result"] = "Другой тип данных"
    return result
    
def exercise_5(s):
    result = {}
    if s.islower(): #проверяет, состоят ли все буквы в строке из строчных букв
        result["result"] = "строчные"
    elif s.isupper(): # проверяет, состоят ли все буквы в строке из заглавных букв
       result["result"] = "КАПС"
    elif s.isspace(): #проверяет, состоит ли строка только из пробелов
        result["result"] = "Пробелы"
    elif s.istitle(): #проверяет, является ли строка строкой с заголовком 
        result["result"] = "Заголовок"
    else:
        result["result"] = "Другой тип данных"
    return result
    
def exercise_6(s):
    str_1 = s.lower() #Преобразование в нижний регистр

    str_2 = s.upper() #Преобразование в верхний регистр 

    return str_2, str_1

def exercise_7(s): 
    return s.expandtabs(4) #замена табуляции на 4 пробела

def exercise_8(s):
    str_1 = s.strip() # удаляем пробелы с обоих концов строки

    str_2 = s.lstrip() # удаляем пробелы слева от строки

    str_3 = s.rstrip() # удаляем пробелы справа от строки

    return str_1, str_2, str_3

def exercise_9(s):
    return s.title() #Преобразование строки в заголовок

def exercise_10(name,age):
    greeting = "Привет, {}. Тебе уже {} лет!".format(name, age) #заменяет фигурные скобки {} в строке значениями, переданными в качестве аргументов
    
    return greeting

#print(exercise_number("input")) -- Тестирование функций